// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: keeper.proto

package proto

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	InfoKeeper_AddUser_FullMethodName                 = "/proto.InfoKeeper/AddUser"
	InfoKeeper_AuthUser_FullMethodName                = "/proto.InfoKeeper/AuthUser"
	InfoKeeper_AddCard_FullMethodName                 = "/proto.InfoKeeper/AddCard"
	InfoKeeper_AddLogin_FullMethodName                = "/proto.InfoKeeper/AddLogin"
	InfoKeeper_AddBinaryData_FullMethodName           = "/proto.InfoKeeper/AddBinaryData"
	InfoKeeper_AddTextData_FullMethodName             = "/proto.InfoKeeper/AddTextData"
	InfoKeeper_GetUserCard_FullMethodName             = "/proto.InfoKeeper/GetUserCard"
	InfoKeeper_GetUserLogin_FullMethodName            = "/proto.InfoKeeper/GetUserLogin"
	InfoKeeper_GetUserText_FullMethodName             = "/proto.InfoKeeper/GetUserText"
	InfoKeeper_GetUserBinary_FullMethodName           = "/proto.InfoKeeper/GetUserBinary"
	InfoKeeper_SyncUserData_FullMethodName            = "/proto.InfoKeeper/SyncUserData"
	InfoKeeper_ForceUpdateCard_FullMethodName         = "/proto.InfoKeeper/ForceUpdateCard"
	InfoKeeper_ForceUpdateLoginPwd_FullMethodName     = "/proto.InfoKeeper/ForceUpdateLoginPwd"
	InfoKeeper_ForceUpdateTextRecord_FullMethodName   = "/proto.InfoKeeper/ForceUpdateTextRecord"
	InfoKeeper_ForceUpdateBinaryRecord_FullMethodName = "/proto.InfoKeeper/ForceUpdateBinaryRecord"
)

// InfoKeeperClient is the client API for InfoKeeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InfoKeeperClient interface {
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error)
	AuthUser(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error)
	AddCard(ctx context.Context, in *AddCardRequest, opts ...grpc.CallOption) (*AddCardResponse, error)
	AddLogin(ctx context.Context, in *AddLoginRequest, opts ...grpc.CallOption) (*AddLoginResponse, error)
	AddBinaryData(ctx context.Context, in *AddBinaryDataRequest, opts ...grpc.CallOption) (*AddBinaryDataResponse, error)
	AddTextData(ctx context.Context, in *AddTextDataRequest, opts ...grpc.CallOption) (*AddTextDataResponse, error)
	GetUserCard(ctx context.Context, in *GetUserCardRequest, opts ...grpc.CallOption) (*GetUserCardResponse, error)
	GetUserLogin(ctx context.Context, in *GetUserLoginRequest, opts ...grpc.CallOption) (*GetUserLoginResponse, error)
	GetUserText(ctx context.Context, in *GetUserTextRequest, opts ...grpc.CallOption) (*GetUserTextResponse, error)
	GetUserBinary(ctx context.Context, in *GetUserBinaryRequest, opts ...grpc.CallOption) (*GetUserBinaryResponse, error)
	SyncUserData(ctx context.Context, in *SyncUserDataRequest, opts ...grpc.CallOption) (*SyncUserDataResponse, error)
	ForceUpdateCard(ctx context.Context, in *ForceUpdateCardRequest, opts ...grpc.CallOption) (*ForceUpdateCardResponse, error)
	ForceUpdateLoginPwd(ctx context.Context, in *ForceUpdateLoginPwdRequest, opts ...grpc.CallOption) (*ForceUpdateLoginPwdResponse, error)
	ForceUpdateTextRecord(ctx context.Context, in *ForceUpdateTextRecordRequest, opts ...grpc.CallOption) (*ForceUpdateTextRecordResponse, error)
	ForceUpdateBinaryRecord(ctx context.Context, in *ForceUpdateBinaryRecordRequest, opts ...grpc.CallOption) (*ForceUpdateBinaryRecordResponse, error)
}

type infoKeeperClient struct {
	cc grpc.ClientConnInterface
}

func NewInfoKeeperClient(cc grpc.ClientConnInterface) InfoKeeperClient {
	return &infoKeeperClient{cc}
}

func (c *infoKeeperClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error) {
	out := new(AddUserResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AddUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) AuthUser(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error) {
	out := new(AuthUserResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AuthUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) AddCard(ctx context.Context, in *AddCardRequest, opts ...grpc.CallOption) (*AddCardResponse, error) {
	out := new(AddCardResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AddCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) AddLogin(ctx context.Context, in *AddLoginRequest, opts ...grpc.CallOption) (*AddLoginResponse, error) {
	out := new(AddLoginResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AddLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) AddBinaryData(ctx context.Context, in *AddBinaryDataRequest, opts ...grpc.CallOption) (*AddBinaryDataResponse, error) {
	out := new(AddBinaryDataResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AddBinaryData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) AddTextData(ctx context.Context, in *AddTextDataRequest, opts ...grpc.CallOption) (*AddTextDataResponse, error) {
	out := new(AddTextDataResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_AddTextData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) GetUserCard(ctx context.Context, in *GetUserCardRequest, opts ...grpc.CallOption) (*GetUserCardResponse, error) {
	out := new(GetUserCardResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_GetUserCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) GetUserLogin(ctx context.Context, in *GetUserLoginRequest, opts ...grpc.CallOption) (*GetUserLoginResponse, error) {
	out := new(GetUserLoginResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_GetUserLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) GetUserText(ctx context.Context, in *GetUserTextRequest, opts ...grpc.CallOption) (*GetUserTextResponse, error) {
	out := new(GetUserTextResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_GetUserText_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) GetUserBinary(ctx context.Context, in *GetUserBinaryRequest, opts ...grpc.CallOption) (*GetUserBinaryResponse, error) {
	out := new(GetUserBinaryResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_GetUserBinary_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) SyncUserData(ctx context.Context, in *SyncUserDataRequest, opts ...grpc.CallOption) (*SyncUserDataResponse, error) {
	out := new(SyncUserDataResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_SyncUserData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) ForceUpdateCard(ctx context.Context, in *ForceUpdateCardRequest, opts ...grpc.CallOption) (*ForceUpdateCardResponse, error) {
	out := new(ForceUpdateCardResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_ForceUpdateCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) ForceUpdateLoginPwd(ctx context.Context, in *ForceUpdateLoginPwdRequest, opts ...grpc.CallOption) (*ForceUpdateLoginPwdResponse, error) {
	out := new(ForceUpdateLoginPwdResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_ForceUpdateLoginPwd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) ForceUpdateTextRecord(ctx context.Context, in *ForceUpdateTextRecordRequest, opts ...grpc.CallOption) (*ForceUpdateTextRecordResponse, error) {
	out := new(ForceUpdateTextRecordResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_ForceUpdateTextRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoKeeperClient) ForceUpdateBinaryRecord(ctx context.Context, in *ForceUpdateBinaryRecordRequest, opts ...grpc.CallOption) (*ForceUpdateBinaryRecordResponse, error) {
	out := new(ForceUpdateBinaryRecordResponse)
	err := c.cc.Invoke(ctx, InfoKeeper_ForceUpdateBinaryRecord_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoKeeperServer is the server API for InfoKeeper service.
// All implementations must embed UnimplementedInfoKeeperServer
// for forward compatibility
type InfoKeeperServer interface {
	AddUser(context.Context, *AddUserRequest) (*AddUserResponse, error)
	AuthUser(context.Context, *AuthUserRequest) (*AuthUserResponse, error)
	AddCard(context.Context, *AddCardRequest) (*AddCardResponse, error)
	AddLogin(context.Context, *AddLoginRequest) (*AddLoginResponse, error)
	AddBinaryData(context.Context, *AddBinaryDataRequest) (*AddBinaryDataResponse, error)
	AddTextData(context.Context, *AddTextDataRequest) (*AddTextDataResponse, error)
	GetUserCard(context.Context, *GetUserCardRequest) (*GetUserCardResponse, error)
	GetUserLogin(context.Context, *GetUserLoginRequest) (*GetUserLoginResponse, error)
	GetUserText(context.Context, *GetUserTextRequest) (*GetUserTextResponse, error)
	GetUserBinary(context.Context, *GetUserBinaryRequest) (*GetUserBinaryResponse, error)
	SyncUserData(context.Context, *SyncUserDataRequest) (*SyncUserDataResponse, error)
	ForceUpdateCard(context.Context, *ForceUpdateCardRequest) (*ForceUpdateCardResponse, error)
	ForceUpdateLoginPwd(context.Context, *ForceUpdateLoginPwdRequest) (*ForceUpdateLoginPwdResponse, error)
	ForceUpdateTextRecord(context.Context, *ForceUpdateTextRecordRequest) (*ForceUpdateTextRecordResponse, error)
	ForceUpdateBinaryRecord(context.Context, *ForceUpdateBinaryRecordRequest) (*ForceUpdateBinaryRecordResponse, error)
	mustEmbedUnimplementedInfoKeeperServer()
}

// UnimplementedInfoKeeperServer must be embedded to have forward compatible implementations.
type UnimplementedInfoKeeperServer struct {
}

func (UnimplementedInfoKeeperServer) AddUser(context.Context, *AddUserRequest) (*AddUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (UnimplementedInfoKeeperServer) AuthUser(context.Context, *AuthUserRequest) (*AuthUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthUser not implemented")
}
func (UnimplementedInfoKeeperServer) AddCard(context.Context, *AddCardRequest) (*AddCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCard not implemented")
}
func (UnimplementedInfoKeeperServer) AddLogin(context.Context, *AddLoginRequest) (*AddLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLogin not implemented")
}
func (UnimplementedInfoKeeperServer) AddBinaryData(context.Context, *AddBinaryDataRequest) (*AddBinaryDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBinaryData not implemented")
}
func (UnimplementedInfoKeeperServer) AddTextData(context.Context, *AddTextDataRequest) (*AddTextDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTextData not implemented")
}
func (UnimplementedInfoKeeperServer) GetUserCard(context.Context, *GetUserCardRequest) (*GetUserCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCard not implemented")
}
func (UnimplementedInfoKeeperServer) GetUserLogin(context.Context, *GetUserLoginRequest) (*GetUserLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserLogin not implemented")
}
func (UnimplementedInfoKeeperServer) GetUserText(context.Context, *GetUserTextRequest) (*GetUserTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserText not implemented")
}
func (UnimplementedInfoKeeperServer) GetUserBinary(context.Context, *GetUserBinaryRequest) (*GetUserBinaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserBinary not implemented")
}
func (UnimplementedInfoKeeperServer) SyncUserData(context.Context, *SyncUserDataRequest) (*SyncUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncUserData not implemented")
}
func (UnimplementedInfoKeeperServer) ForceUpdateCard(context.Context, *ForceUpdateCardRequest) (*ForceUpdateCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceUpdateCard not implemented")
}
func (UnimplementedInfoKeeperServer) ForceUpdateLoginPwd(context.Context, *ForceUpdateLoginPwdRequest) (*ForceUpdateLoginPwdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceUpdateLoginPwd not implemented")
}
func (UnimplementedInfoKeeperServer) ForceUpdateTextRecord(context.Context, *ForceUpdateTextRecordRequest) (*ForceUpdateTextRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceUpdateTextRecord not implemented")
}
func (UnimplementedInfoKeeperServer) ForceUpdateBinaryRecord(context.Context, *ForceUpdateBinaryRecordRequest) (*ForceUpdateBinaryRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceUpdateBinaryRecord not implemented")
}
func (UnimplementedInfoKeeperServer) mustEmbedUnimplementedInfoKeeperServer() {}

// UnsafeInfoKeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InfoKeeperServer will
// result in compilation errors.
type UnsafeInfoKeeperServer interface {
	mustEmbedUnimplementedInfoKeeperServer()
}

func RegisterInfoKeeperServer(s grpc.ServiceRegistrar, srv InfoKeeperServer) {
	s.RegisterService(&InfoKeeper_ServiceDesc, srv)
}

func _InfoKeeper_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AddUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_AuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AuthUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AuthUser(ctx, req.(*AuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_AddCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AddCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AddCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AddCard(ctx, req.(*AddCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_AddLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AddLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AddLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AddLogin(ctx, req.(*AddLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_AddBinaryData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBinaryDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AddBinaryData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AddBinaryData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AddBinaryData(ctx, req.(*AddBinaryDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_AddTextData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTextDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).AddTextData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_AddTextData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).AddTextData(ctx, req.(*AddTextDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_GetUserCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).GetUserCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_GetUserCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).GetUserCard(ctx, req.(*GetUserCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_GetUserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).GetUserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_GetUserLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).GetUserLogin(ctx, req.(*GetUserLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_GetUserText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).GetUserText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_GetUserText_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).GetUserText(ctx, req.(*GetUserTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_GetUserBinary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserBinaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).GetUserBinary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_GetUserBinary_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).GetUserBinary(ctx, req.(*GetUserBinaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_SyncUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).SyncUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_SyncUserData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).SyncUserData(ctx, req.(*SyncUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_ForceUpdateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceUpdateCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).ForceUpdateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_ForceUpdateCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).ForceUpdateCard(ctx, req.(*ForceUpdateCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_ForceUpdateLoginPwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceUpdateLoginPwdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).ForceUpdateLoginPwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_ForceUpdateLoginPwd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).ForceUpdateLoginPwd(ctx, req.(*ForceUpdateLoginPwdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_ForceUpdateTextRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceUpdateTextRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).ForceUpdateTextRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_ForceUpdateTextRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).ForceUpdateTextRecord(ctx, req.(*ForceUpdateTextRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoKeeper_ForceUpdateBinaryRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceUpdateBinaryRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoKeeperServer).ForceUpdateBinaryRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InfoKeeper_ForceUpdateBinaryRecord_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoKeeperServer).ForceUpdateBinaryRecord(ctx, req.(*ForceUpdateBinaryRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InfoKeeper_ServiceDesc is the grpc.ServiceDesc for InfoKeeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InfoKeeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.InfoKeeper",
	HandlerType: (*InfoKeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _InfoKeeper_AddUser_Handler,
		},
		{
			MethodName: "AuthUser",
			Handler:    _InfoKeeper_AuthUser_Handler,
		},
		{
			MethodName: "AddCard",
			Handler:    _InfoKeeper_AddCard_Handler,
		},
		{
			MethodName: "AddLogin",
			Handler:    _InfoKeeper_AddLogin_Handler,
		},
		{
			MethodName: "AddBinaryData",
			Handler:    _InfoKeeper_AddBinaryData_Handler,
		},
		{
			MethodName: "AddTextData",
			Handler:    _InfoKeeper_AddTextData_Handler,
		},
		{
			MethodName: "GetUserCard",
			Handler:    _InfoKeeper_GetUserCard_Handler,
		},
		{
			MethodName: "GetUserLogin",
			Handler:    _InfoKeeper_GetUserLogin_Handler,
		},
		{
			MethodName: "GetUserText",
			Handler:    _InfoKeeper_GetUserText_Handler,
		},
		{
			MethodName: "GetUserBinary",
			Handler:    _InfoKeeper_GetUserBinary_Handler,
		},
		{
			MethodName: "SyncUserData",
			Handler:    _InfoKeeper_SyncUserData_Handler,
		},
		{
			MethodName: "ForceUpdateCard",
			Handler:    _InfoKeeper_ForceUpdateCard_Handler,
		},
		{
			MethodName: "ForceUpdateLoginPwd",
			Handler:    _InfoKeeper_ForceUpdateLoginPwd_Handler,
		},
		{
			MethodName: "ForceUpdateTextRecord",
			Handler:    _InfoKeeper_ForceUpdateTextRecord_Handler,
		},
		{
			MethodName: "ForceUpdateBinaryRecord",
			Handler:    _InfoKeeper_ForceUpdateBinaryRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "keeper.proto",
}
